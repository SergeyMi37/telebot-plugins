import io
import csv

from datetime import datetime
from django.db.models import QuerySet
from typing import Dict

import os
from pathlib import Path
from dtb.settings import DATABASE_URL


def _get_csv_from_qs_values(queryset: QuerySet[Dict], filename: str = 'users'):
    keys = queryset[0].keys()
    print('--csvkeys-',type(keys),keys)
    print('--csv-',type(queryset),queryset)
    # csv module can write data in io.StringIO buffer only
    s = io.StringIO()
    dict_writer = csv.DictWriter(s, fieldnames=keys)
    dict_writer.writeheader()
    dict_writer.writerows(queryset)
    s.seek(0)

    # python-telegram-bot library can send files only from io.BytesIO buffer
    # we need to convert StringIO to BytesIO
    buf = io.BytesIO()

    # extract csv-string, convert it to bytes and write to buffer
    buf.write(s.getvalue().encode())
    buf.seek(0)

    # set a filename with file's extension
    buf.name = f"{filename}__{datetime.now().strftime('%Y.%m.%d.%H.%M')}.csv"

    return buf

def piece(value,  *args, **kwargs):
    if not value: return ""
    delimiter = kwargs['delimiter']
    num = kwargs['num']
    return value.split(delimiter)[num]  # $piece(a,"*",num)

def iris_piece(value, delim, num):
    if not value: return ""
    return value.split(delim)[num]  # txt.split(" ")[1::])) # $piece(a," ",2,

class GetExtInfo:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""

    @staticmethod
    def GetGitInfo():
        """–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –≤–µ—Ç–∫–∏ –ì–∏—Ç–∞"""
        # –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ø—É—Ç—å –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        dir = str(Path(os.getcwd()).resolve()) # .parent)
        # –ù–∞–π—Ç–∏ —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ç–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
        fn = os.path.join(dir + "/.git", "config")
        print(fn)
    
        if os.path.exists(fn):
            with open(fn, 'r') as file:
                # –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞
                fn_datatime = f"üìÜ **{ (datetime.fromtimestamp(os.path.getmtime(fn)) )}**"
                content = file.read()
                dir += f"\n üå¥ **–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ç–∫–∞** [{content.split('[branch ')[content.count('[branch ')]}  {fn_datatime}"
        return f"\n üöß **–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏.**\n üÖø DATABASE_URL : //{DATABASE_URL}\n üìÇ **–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–µ–∫—Ç–∞** {dir}"
    
    