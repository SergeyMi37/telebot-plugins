# Plugin –ù–æ–≤–æ—Å—Ç–∏ –∏–∑ –ª–µ–Ω—Ç—ã rss
# Name Plugin: NEWS
    # - NEWS:
    #     - blocked = 1
    #     - desc = –°–µ—Ä–≤–∏—Å –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π 

from django.utils.timezone import now
from telegram import ParseMode, Update
from telegram.ext import CallbackContext
from dtb.settings import get_plugins
from dtb.settings import logger
from tgbot.handlers.admin.static_text import CRLF, only_for_admins
from tgbot.handlers.utils.info import get_tele_command
from tgbot.handlers.utils.decorators import check_blocked_user
from users.models import User
import feedparser
from datetime import datetime

# –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ä–æ–ª—å ''
plugin_news = get_plugins('').get('NEWS')

# –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ RSS-–∫–∞–Ω–∞–ª—ã
rss_urls = [
    'https://rg.ru/xml/index.xml',
    'https://www.pnp.ru/rss/index.xml'
]

def fetch_news(url):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ RSS-–∫–∞–Ω–∞–ª–∞"""
    news_list = []
    feed = feedparser.parse(url)
    for entry in feed.entries:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–∞–∂–Ω—ã–µ –ø–æ–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
        title = entry.get('title', '')
        link = entry.get('link', '')
        published = entry.get('published', '')  # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        
        if all([title, link]):
            news_list.append({
                'title': title,
                'link': link,
                'published': published,
                'source': feed.feed.title
            })
    
    return news_list

@check_blocked_user
def commands(update: Update, context: CallbackContext) -> None:
    u = User.get_user(update, context)
    telecmd, upms = get_tele_command(update)
    count = 10
    _co = telecmd.split('news')[1]
    if _co=='list':
        pass
    if _co:
        count=int(_co)

    text = f'<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ {count}</b>'
    
    unique_titles = set()  # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    sorted_news = []       # –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π

    for url in rss_urls:
        news_items = fetch_news(url)
        for item in news_items:
            if item['title'] not in unique_titles:
                unique_titles.add(item['title'])
                sorted_news.append(item)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (—É–±—ã–≤–∞–Ω–∏–µ)
    sorted_news.sort(key=lambda x: x['published'], reverse=True)

    for news_item in sorted_news[:count]:  # –≤—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 10 –Ω–æ–≤–æ—Å—Ç–µ–π
        text +=f"\nüëâ{news_item['title']} üéØ{news_item['source']} üìÜ({news_item['published']})"
        text +=f"\n\t üîç{news_item['link']}"  # –≤—ã–≤–æ–¥–∏—Ç—å —Å—Å—ã–ª–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ
    
    context.bot.send_message(
        chat_id=u.user_id,
        text=text,
        parse_mode=ParseMode.HTML
    )