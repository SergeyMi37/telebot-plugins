# Name Plugin: CODE
    # - CODE:
    #     - desc = –ü–æ–∏—Å–∫ –†–µ–≥–∏–æ–Ω–æ–≤ –†–§ –ø–æ –≥–æ—Å–Ω–æ–º–µ—Ä–∞–º, –ø–æ–∏—Å–∫ —Å—Ç—Ä–∞–Ω—ã –ø–æ –Ω–∞—á–∞–ª—É —à—Ç–∏—Ö–∫–æ–¥–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
# –∏–º—è –ø–ª–∞–≥–∏–Ω–∞ CODE –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∏–º–µ–Ω–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Dynaconf
# –∏–º—è –ø–ª–∞–≥–∏–Ω–∞ code –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º –ø–æ–ª–µ–º –æ—Ç _ –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ code_plugin
# –∏–º—è —Ñ–∞–π–ª–∞ –ø–ª–∞–≥–∏–Ω–∞ –¥–æ–ª–∂–Ω–æ –æ–∫–∞—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ _plugin
# –í –º–æ–¥—É–ª–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–¥–µ–ª–Ω –∫–ª–∞—Å—Å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
# class CodPlugin(BasePlugin):
#    def setup_handlers(self, dp):
# https://codificator.ru/code/mobile/#list - –ø–æ–ª–µ–∑–Ω—ã–π —Å–∞–π—Ç

from django.utils.timezone import now
from telegram import ParseMode, Update
from telegram.ext import CallbackContext
from dtb.settings import get_plugins
from dtb.settings import logger
from tgbot.handlers.utils.info import get_tele_command
from tgbot.handlers.utils.decorators import check_groupe_user
from users.models import User
from tgbot.plugins.base_plugin import BasePlugin
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, ConversationHandler

# –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ä–æ–ª—å ''
plugin_wiki = get_plugins('').get('CODE')

CODE_INPUT = range(1)
#CODE_INPUT_EAN = range(1)
_code_help = "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\r /code_rf_01 –∏–ª–∏ <code>/code_rf_–ö—É—Ä—Å</code> - –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ –∫–æ–¥—É –∏–ª–∏ –∫–æ–¥ –ø–æ –Ω–∞—á–∞–ª—É –Ω–∞–∑–≤–∞–Ω–∏—è" \
        "\n\r /code_ean_46 –∏–ª–∏ <code>/code_ean_–ö–∏—Ç–∞</code> - –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ —à—Ç—Ä–∏—Ö–∫–æ–¥—É –∏–ª–∏ –∫–æ–¥ –ø–æ –Ω–∞—á–∞–ª—É –Ω–∞–∑–≤–∞–Ω–∏—è" \
        "\n\r /code_ean_ - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —à—Ç—Ä–∏—Ö–∫–æ–¥—ã \n\r/code_rf_ - –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤" \
        "\n\r /code_ean - –≤–≤–µ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —à—Ç—Ä–∏—Ö–∫–æ–¥–æ–≤ \n\r/code_rf - –≤–≤–µ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–≥–∏–æ–Ω–æ–≤" 
 
def request_code_ean(update: Update, context):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    upms = get_tele_command(update)
    upms.reply_text("–í–≤–µ–¥–∏—Ç–µ 2 –∏–ª–∏ 3 —Ü–∏—Ñ—Ä—ã —à—Ç—Ä–∏—Ö–∫–æ–¥–∞ –∏–ª–∏ –∏–º—è —Å—Ç—Ä–∞–Ω—ã /cancel - –æ—Ç–º–µ–Ω–∞")
    return CODE_INPUT #_EAN

def check_code_ean(update: Update, context):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π —à—Ç—Ä–∏—Ö–∫–æ–¥ """
    upms = get_tele_command(update)
    code = upms.text
    _name = find_country(code)
    if _name:
        response = f"–®—Ç—Ä–∏—Ö–ö–æ–¥ '{code}' —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–∞–Ω–µ {_name}"
    else:
        response = f"–®—Ç—Ä–∏—Ö–ö–æ–¥ '{code}' –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω."
    #upms.reply_text(response)
    context.bot.send_message(
        chat_id=upms.chat.id,
        text = response + '\n\rüî∏/help /code',
        disable_web_page_preview=True,
        parse_mode=ParseMode.HTML
    )
    return ConversationHandler.END

def request_code(update: Update, context):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    upms = get_tele_command(update)
    upms.reply_text("–í–≤–µ–¥–∏—Ç–µ 2 –∏–ª–∏ 3 —Ü–∏—Ñ—Ä—ã –∫–æ–¥–∞ –∏–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ –†–§ /cancel - –æ—Ç–º–µ–Ω–∞")
    return CODE_INPUT

def check_code(update: Update, context):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞"""
    upms = get_tele_command(update)
    code = upms.text
    region_name = find_region(code)
    if region_name:
        response = f"–ö–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ '{code}' —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≥–æ—Ä–æ–¥—É/—Ä–µ–≥–∏–æ–Ω—É {region_name}"
    else:
        response = f"–ö–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ '{code}' –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω."
    context.bot.send_message(
        chat_id=upms.chat.id,
        text=response + '\n\rüî∏/help /code',
        disable_web_page_preview=True,
        parse_mode=ParseMode.HTML
    )
    return ConversationHandler.END

def cancel(update: Update, context):
    """–ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥"""
    upms = get_tele_command(update)
    upms.reply_text("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)

class CodPlugin(BasePlugin):
    def setup_handlers(self, dp):
        cmd = "/code"

        conv_handler = ConversationHandler(
            entry_points=[CommandHandler('code_rf', request_code)],
            states={
                CODE_INPUT: [
                    MessageHandler(Filters.text & (~Filters.command), check_code),
                ],
            },
            fallbacks=[
                CommandHandler('cancel', cancel),
            ]
        )
        conv_handler_ean = ConversationHandler(
            entry_points=[CommandHandler('code_ean', request_code_ean)],
            states={
                CODE_INPUT: [
                    MessageHandler(Filters.text & (~Filters.command), check_code_ean),
                ],
            },
            fallbacks=[
                CommandHandler('cancel', cancel),
            ]
        )

        dp.add_handler(conv_handler)
        dp.add_handler(conv_handler_ean)
        dp.add_handler(MessageHandler(Filters.regex(rf'^{cmd}(/s)?.*'), commands))
        dp.add_handler(MessageHandler(Filters.regex(rf'^code(/s)?.*'), commands))
        dp.add_handler(CallbackQueryHandler(button, pattern="^button_code"))

regions = {
        "01,101": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–¥—ã–≥–µ—è",
        "02,102,702": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω",
        "03,103": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë—É—Ä—è—Ç–∏—è",
        "04": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–ª—Ç–∞–π",
        "05": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –î–∞–≥–µ—Å—Ç–∞–Ω",
        "06": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ò–Ω–≥—É—à–µ—Ç–∏—è",
        "07": "–ö–∞–±–∞—Ä–¥–∏–Ω–æ-–ë–∞–ª–∫–∞—Ä—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
        "08": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞–ª–º—ã–∫–∏—è",
        "09,109": "–ö–∞—Ä–∞—á–∞–µ–≤–æ-–ß–µ—Ä–∫–µ—Å—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
        "10": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–µ–ª–∏—è",
        "11,111": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ–º–∏",
        "12": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª",
        "13,113": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–æ—Ä–¥–æ–≤–∏—è",
        "14": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è)",
        "15": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è ‚Äî –ê–ª–∞–Ω–∏—è",
        "16,116,716": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω",
        "17": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢—ã–≤–∞",
        "18,118": "–£–¥–º—É—Ä—Ç—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
        "19": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –•–∞–∫–∞—Å–∏—è",
        "20,95": "–ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ (–¥–æ 2000 –≥–æ–¥–∞)",
        "21,121": "–ß—É–≤–∞—à—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞",
        "22,122": "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π",
        "23,93,123,193,323": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π",
        "24,84,88,124": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π",
        "25,125,725": "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π",
        "26,126": "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π",
        "27": "–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π –∫—Ä–∞–π",
        "28": "–ê–º—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "29": "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "30,130": "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "31": "–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "32": "–ë—Ä—è–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "33": "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "34,134": "–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "35": "–í–æ–ª–æ–≥–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "36,136": "–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "37": "–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "38,138": "–ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "39,91,139": "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "40": "–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "41": "–ö–∞–º—á–∞—Ç—Å–∫–∏–π –∫—Ä–∞–π",
        "42,142": "–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (–ö—É–∑–±–∞—Å)",
        "43": "–ö–∏—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "44": "–ö–æ—Å—Ç—Ä–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "45": "–ö—É—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "46": "–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "47,147": "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "48": "–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "49": "–ú–∞–≥–∞–¥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "50,90,150,190,250,550,750,790": "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "51": "–ú—É—Ä–º–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "52,152,252": "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "53": "–ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "54,154,754": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "55,155": "–û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "56,156": "–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "57": "–û—Ä–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "58,158": "–ü–µ–Ω–∑–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "59,159": "–ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π",
        "60": "–ü—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "61,161,761": "–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "62": "–†—è–∑–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "63,163,763": "–°–∞–º–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "64,164": "–°–∞—Ä–∞—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "65": "–°–∞—Ö–∞–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "66,96,196": "–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥)",
        "67": "–°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "68": "–¢–∞–º–±–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "69,169": "–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "70": "–¢–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "71": "–¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "72,172": "–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "73,173": "–£–ª—å—è–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "74,175,774": "–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "75": "–ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–π –∫—Ä–∞–π",
        "76": "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "77,97,99,177,197,199,777,797,799,977": "–ú–æ—Å–∫–≤–∞",
        "78,98,178,198": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        "79": "–ï–≤—Ä–µ–π—Å–∫–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –æ–±–ª–∞—Å—Ç—å",
        "80,180": "–î–æ–Ω–µ—Ü–∫–∞—è –ù–∞—Ä–æ–¥–Ω–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ (–î–ù–†)",
        "81,191": "–õ—É–≥–∞–Ω—Å–∫–∞—è –ù–∞—Ä–æ–¥–Ω–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞ (–õ–ù–†)",
        "82,182": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö—Ä—ã–º",
        "83": "–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥",
        "84,184": "–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "85,185": "–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
        "86,186": "–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥ ‚Äî –Æ–≥—Ä–∞",
        "87": "–ß—É–∫–æ—Ç—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥",
        "88": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π (—Å—Ç–∞—Ä—ã–π –∫–æ–¥)",
        "89": "–Ø–º–∞–ª–æ-–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥",
        "90": "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (—Å—Ç–∞—Ä—ã–π –∫–æ–¥)",
        "91": "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (—Å—Ç–∞—Ä—ã–π –∫–æ–¥)",
        "92,192": "–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å",
        "93": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π (–≤–∫–ª—é—á–∞—è –ê–¥—ã–≥–µ—é)",
        "94": "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –†–§ (–ë–∞–π–∫–æ–Ω—É—Ä)",
        "188": "–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"
    }

COUNTRY_CODES = {
    "0-13": "–°–®–ê –∏ –ö–∞–Ω–∞–¥–∞",
    "30-37": "–§—Ä–∞–Ω—Ü–∏—è",
    "380": "–ë–æ–ª–≥–∞—Ä–∏—è",
    "383": "–°–ª–æ–≤–µ–Ω–∏—è",
    "385": "–•–æ—Ä–≤–∞—Ç–∏—è",
    "387": "–ë–æ—Å–Ω–∏—è –∏ –ì–µ—Ä—Ü–µ–≥–æ–≤–∏–Ω–∞",
    "400-440": "–ì–µ—Ä–º–∞–Ω–∏—è",
    "45": "–Ø–ø–æ–Ω–∏—è",
    "49": "–Ø–ø–æ–Ω–∏—è",
    "460-469": "–†–æ—Å—Å–∏—è",
    "471": "–¢–∞–π–≤–∞–Ω—å",
    "474": "–≠—Å—Ç–æ–Ω–∏—è",
    "475": "–õ–∞—Ç–≤–∏—è",
    "476": "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω",
    "477": "–õ–∏—Ç–≤–∞",
    "478": "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω",
    "479": "–®—Ä–∏-–õ–∞–Ω–∫–∞",
    "480": "–§–∏–ª–∏–ø–ø–∏–Ω—ã",
    "481": "–ë–µ–ª–∞—Ä—É—Å—å",
    "482": "–£–∫—Ä–∞–∏–Ω–∞",
    "484": "–ú–æ–ª–¥–æ–≤–∞",
    "485": "–ê—Ä–º–µ–Ω–∏—è",
    "486": "–ì—Ä—É–∑–∏—è",
    "487": "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω",
    "489": "–ì–æ–Ω–∫–æ–Ω–≥",
    "50": "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è",
    "520-521": "–ì—Ä–µ—Ü–∏—è",
    "528": "–õ–∏–≤–∞–Ω",
    "529": "–ö–∏–ø—Ä",
    "530": "–ê–ª–±–∞–Ω–∏—è",
    "531": "–ú–∞–∫–µ–¥–æ–Ω–∏—è",
    "535-539": "–ú–∞–ª—å—Ç–∞",
    "54": "–ë–µ–ª—å–≥–∏—è –∏ –õ—é–∫—Å–µ–º–±—É—Ä–≥",
    "560": "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è",
    "569": "–ò—Å–ª–∞–Ω–¥–∏—è",
    "57": "–î–∞–Ω–∏—è",
    "590": "–ü–æ–ª—å—à–∞",
    "594": "–†—É–º—ã–Ω–∏—è",
    "599": "–í–µ–Ω–≥—Ä–∏—è",
    "600-601": "–Æ–∂–Ω–∞—è –ê—Ñ—Ä–∏–∫–∞",
    "609": "–ú–∞–≤—Ä–∏–∫–∏–π",
    "611": "–ú–∞—Ä–æ–∫–∫–æ",
    "613": "–ê–ª–∂–∏—Ä",
    "619": "–¢—É–Ω–∏—Å",
    "621": "–°–∏—Ä–∏—è",
    "622": "–ï–≥–∏–ø–µ—Ç",
    "624": "–õ–∏–≤–∏—è",
    "625": "–ò–æ—Ä–¥–∞–Ω–∏—è",
    "626": "–ò—Ä–∞–Ω",
    "627": "–ö—É–≤–µ–π—Ç",
    "628": "–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è",
    "629": "–û–ê–≠",
    "64": "–§–∏–Ω–ª—è–Ω–¥–∏—è",
    "690-695": "–ö–∏—Ç–∞–π",
    "70": "–ù–æ—Ä–≤–µ–≥–∏—è",
    "729": "–ò–∑—Ä–∞–∏–ª—å",
    "73": "–®–≤–µ—Ü–∏—è",
    "740-745": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞ (–ì–≤–∞—Ç–µ–º–∞–ª–∞, –°–∞–ª—å–≤–∞–¥–æ—Ä, –ì–æ–Ω–¥—É—Ä–∞—Å)",
    "750": "–ú–µ–∫—Å–∏–∫–∞",
    "759": "–í–µ–Ω–µ—Å—É—ç–ª–∞",
    "76": "–®–≤–µ–π—Ü–∞—Ä–∏—è",
    "770-771": "–ö–æ–ª—É–º–±–∏—è",
    "773": "–£—Ä—É–≥–≤–∞–π",
    "775": "–ü–µ—Ä—É",
    "777": "–ë–æ–ª–∏–≤–∏—è",
    "779": "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞",
    "780": "–ß–∏–ª–∏",
    "784": "–ü–∞—Ä–∞–≥–≤–∞–π",
    "786": "–≠–∫–≤–∞–¥–æ—Ä",
    "789-790": "–ë—Ä–∞–∑–∏–ª–∏—è",
    "80-83": "–ò—Ç–∞–ª–∏—è",
    "84": "–ò—Å–ø–∞–Ω–∏—è",
    "850": "–ö—É–±–∞",
    "858": "–°–ª–æ–≤–∞–∫–∏—è",
    "859": "–ß–µ—Ö–∏—è",
    "860": "–°–µ—Ä–±–∏—è",
    "865": "–ú–æ–Ω–≥–æ–ª–∏—è",
    "867": "–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–µ—è",
    "869": "–¢—É—Ä—Ü–∏—è",
    "87": "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã",
    "880": "–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è",
    "885": "–¢–∞–∏–ª–∞–Ω–¥",
    "888": "–°–∏–Ω–≥–∞–ø—É—Ä",
    "890": "–ò–Ω–¥–∏—è",
    "893": "–í—å–µ—Ç–Ω–∞–º",
    "896": "–ü–∞–∫–∏—Å—Ç–∞–Ω",
    "899": "–ò–Ω–¥–æ–Ω–µ–∑–∏—è",
    "90-91": "–ê–≤—Å—Ç—Ä–∏—è",
    "93": "–ê–≤—Å—Ç—Ä–∞–ª–∏—è",
    "94": "–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è",
    "955": "–ú–∞–ª–∞–π–∑–∏—è",
    "958": "–ú–∞–∫–∞–æ",
    "977": "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∏–∑–¥–∞–Ω–∏—è (ISSN)",
    "978-979": "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –∫–Ω–∏–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ (ISBN)",
    "980": "–í–æ–∑–≤—Ä–∞—Ç–Ω—ã–µ –∫—É–ø–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
    "981-982": "–û–±—â–∏–µ —Ç–æ–≤–∞—Ä—ã –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è (–í–∞–ª—é—Ç–Ω—ã–µ –∫—É–ø–æ–Ω—ã)",
    "990-999": "–ö—É–ø–æ–Ω—ã"
    }

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —á–∏—Å–µ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏
def extract_prefix(barcode):
    for key,val in COUNTRY_CODES.items():
        if ('-' not in key and int(key) == int(barcode) ) or ('-' in key and int(key.split('-')[0]) <= int(barcode) <= int(key.split('-')[1])):
            #print(key,val)
            return key
    return None

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–∞
def find_region(input_data):
    '''
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
    –ù–æ–º–µ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö
    https://auto.ru/mag/article/avtomobilnye-kody-regionov-rossii/?utm_referrer=https%3A%2F%2Fwww.google.com%2F
    
    '''
    input_data = str(input_data).strip()  # –ü—Ä–∏–≤–æ–¥–∏–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫ —Å—Ç—Ä–æ–∫–µ –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
    found=""
    _input = input_data
    if input_data.isdigit():
        if len(input_data) > 3:
            _input = input_data[:3]
    for key,val in regions.items():
        if _input.isdigit():
            if f',{_input},' in f',{key},':
                found += f'\n\r<b>{key}</b> {val}'
        else:
            if input_data.lower() in val.lower():
                found += f'\n\r<b>{key}</b> {val}'
    if found=='':
        return "–†–µ–≥–∏–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω."
    return found


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ —à—Ç—Ä–∏—Ö-–∫–æ–¥—É –∏–ª–∏ –µ—ë –Ω–∞–∑–≤–∞–Ω–∏—é
def find_country(input_data):
    '''
    –®—Ç—Ä–∏—Ö –∫–æ–¥—ã —Å—Ç—Ä–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π
    https://bosla.ru/poleznaya-informatsiya/pro-shtrikh-kod/shtrikh-kod
    '''
    input_data = str(input_data).strip()  # –ü—Ä–∏–≤–æ–¥–∏–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫ —Å—Ç—Ä–æ–∫–µ –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
    # –ï—Å–ª–∏ –≤–≤–æ–¥ ‚Äî —á–∏—Å–ª–æ (—à—Ç—Ä–∏—Ö-–∫–æ–¥), –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω
    if input_data=='46':
        input_data = '460'
    _input = input_data
    if input_data.isdigit():
        if len(input_data) > 3:
            _input = input_data[:3]
    if _input.isdigit():
        prefix = extract_prefix(_input)
        if prefix is not None:
            return f'<b>{prefix}</b> {COUNTRY_CODES.get(prefix, "–°—Ç—Ä–∞–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞")}'
        else:
            return f'–®—Ç—Ä–∏—Ö-–∫–æ–¥ EAN, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è –Ω–∞ —Ü–∏—Ñ—Ä—É "{input_data}", –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ'
    found=""
    for key,val in COUNTRY_CODES.items():
        #if input_data.lower() in val.lower():
        if val.lower().startswith(input_data.lower()):
            found += f'\n\r<b>{key}</b> {val}'
    if found=='':
        return "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    return found

@check_groupe_user
def button(update: Update, context: CallbackContext) -> None:
    upms = get_tele_command(update)
    text = "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞, –∏–ª–∏ —Ç–µ–∫—Å—Ç —Ä–µ–≥–∏–æ–Ω–∞. –®—Ç—Ä–∏—Ö–∫–æ–¥—ã —Å—Ç—Ä–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π"
    text += _code_help
    context.bot.edit_message_text(
        text=text,
        chat_id=upms.chat.id, #  u.user_id,
        message_id=update.callback_query.message.message_id,
        parse_mode=ParseMode.HTML
    )

@check_groupe_user
def commands(update: Update, context: CallbackContext) -> None:
    #u = User.get_user(update, context)
    upms = get_tele_command(update)
    telecmd = upms.text
    _input = telecmd.split('code')[1] #.replace("_"," ")
    _output = ""
    if "_rf_" in _input:
       _output = find_region(_input.split('_rf_')[1])
    elif "_ean_" in _input:
        _output = find_country(_input.split('_ean_')[1])
    else:
        _output = _code_help
    _output += '\n\rüî∏/help /code'
    context.bot.send_message(
        chat_id=upms.chat.id,
        text=_output,
        disable_web_page_preview=True,
        parse_mode=ParseMode.HTML
    )
'''
–í–æ—Ç –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–≤—É—Ö—ç—Ç–∞–ø–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python telegram.ext, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π –ø–æ—à–∞–≥–æ–≤—É—é –ø–µ—Ä–µ–¥–∞—á—É –¥–≤—É—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –º—ã —Ö–æ—Ç–∏–º —Å–æ–±—Ä–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –¥–∞—Ç—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –∏–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.

–®–∞–≥–∏ –¥–∏–∞–ª–æ–≥–∞:

–ë–æ—Ç –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.
–ó–∞—Ç–µ–º –±–æ—Ç –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è.
–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –æ–±–æ–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –±–æ—Ç –≤—ã–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

–ö–æ–¥ –ø—Ä–∏–º–µ—Ä–∞:

from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞
CITY, DATE = range(2)

def start(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–ª–æ–≥"""
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
    return CITY

def city_input(update: Update, context: CallbackContext) -> int:
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞"""
    user_city = update.message.text
    context.user_data['city'] = user_city
    update.message.reply_text(f'–ì–æ—Ä–æ–¥ {user_city}. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –¥–∞—Ç—É —Ç–≤–æ–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è.')
    return DATE

def date_input(update: Update, context: CallbackContext) -> None:
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –¥–∞—Ç—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"""
    travel_date = update.message.text
    context.user_data['date'] = travel_date
    chosen_city = context.user_data.get('city')
    update.message.reply_text(f"–¢–≤–æ–π –≤—ã–±–æ—Ä: {chosen_city}, {travel_date}. –°–ø–∞—Å–∏–±–æ!")
    return ConversationHandler.END

def cancel(update: Update, context: CallbackContext) -> None:
    """–û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞"""
    update.message.reply_text("–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

def main():
    updater = Updater("–í–ê–®_TOKEN_–ë–û–¢–ê")
    dispatcher = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            CITY: [MessageHandler(Filters.text & ~Filters.command, city_input)],
            DATE: [MessageHandler(Filters.text & ~Filters.command, date_input)],
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    dispatcher.add_handler(conv_handler)
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()

–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç?

–ö–æ–º–∞–Ω–¥–∞ /start –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
–ü–æ–ª—É—á–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –ø–∞–º—è—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (context.user_data) –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É.
–ü–æ–ª—É—á–∏–≤ –¥–∞—Ç—É, –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ—ë –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /cancel.

–î–∏–∞–ª–æ–≥ –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫:

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: /start
–ë–æ—Ç: –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ú–æ—Å–∫–≤–∞
–ë–æ—Ç: –ì–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –¥–∞—Ç—É —Ç–≤–æ–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: 1 –∏—é–Ω—è
–ë–æ—Ç: –¢–≤–æ–π –≤—ã–±–æ—Ä: –ú–æ—Å–∫–≤–∞, 1 –∏—é–Ω—è. –°–ø–∞—Å–∏–±–æ!

–ò–ª–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∞–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –¥–∏–∞–ª–æ–≥:

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: /start
–ë–æ—Ç: –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: /cancel
–ë–æ—Ç: –î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω.

–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å —Ä–∞–±–æ—á–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è —Å–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

'''